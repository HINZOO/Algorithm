정렬 알고리즘

1.구분
	1) 내부정렬 : 정렬할 데이터를 하나의 배열에 저장할 수 있을 때 사용
	2) 외부정렬 : 정렬할 데이터가 너무 많아 하나의 배열에 저장할 수 없을 때 사용
	--> 현 시점에서는 내부정렬을 다룬다.
2.핵심요소
	교환, 선택, 삽입

3. 종류
	1) 버블정렬
		이웃한 요소를 비교하고 필요에 따라 교환을 반복하는 알고리즘
		n개의 데이터를 비교한다 가정하면
		비교횟수 = n(n-1)/2
		교환횟수의 평균값 = n(n-1)/4
		이동횟수의 평균값 = 3n(n-1)/4 
	2) 단순 선택 정렬
	    아직 정렬하지 않은 부분에서 값이 가장 작은 요소를 선택하고 정렬하지 않은 첫번째 요소와 교환
	    [순서1] 아직 정렬하지 않은 부분에서 가장 작은 키값(a[min])을 선택합니다.
	    [순서2] a[min]과 아직 정렬하지 않은 부분의 첫 번째 요소를 교환합니다.
	    이 과정을 n-1 번 반복한다.
	    비교횟수 = (n^2 - n) /2 번
    3) 단순 삽입 정렬 (straight insertion sort)
        정렬된 부분과 정렬되지 않은 부분의 배열이 구성되어있다고 생각하고
        정렬된 부분의 마지막 요소와 정렬되지 않은 부분의 첫번째 요소를 비교하여
        조건이 맞으면 정렬된 부분의 알맞은 위치에 삽입하여 정렬한다.
        알맞은 위치의 삽입이란?
        [순서1] 정렬된 열의 끝에 도달한다.
        [순서2] 앞에서부터 값을 비교하며 알맞은 위치를 발견한 후 해당 자리를 비우고 나머지 를 뒤로 민다.
               그 후 지정된 위치로 해당값을 이동.
    ==> 1,2,3의 시간 복잡도는 모두 O^2(n)으로 효율이 좋지 않음.

    4) 셸 정렬(참고 : https://www.youtube.com/watch?v=-_CMhW8RNvI)
       그룹을 나누어 조금이라도 더 정렬된 상태를 만든뒤 단순 삽입정렬을 마지막으로 한번 더 수행.
       정렬해야 하는 횟수는 늘지만 전체적으로 요소의 이동횟수가 줄어들어 효율적으로 정렬가능
       셸정렬을 수행하는 과정에서 각각의 정렬을 h-정렬 이라고 한다. (h= 증분값, ex.4-정렬; 기준으로부터 4칸 GAP이 있는 대상과비교)
       [EX]     8 1 4 2 7 6 3 5
            4-정렬인 경우 8기준으로 4개의 GAP을 가진 7과 비교하는것.
            그다음 수인 1은 4 GAP을  가진 7다음수 6와 비교 , 4는 3과비교 2는 5과비교
            --->1회 후 결과 : 7 1 3 2 8 6 4 5
            2-정렬 수행
            7 1 3 2 8 6 4 5
            7기준 2갭인 7 3 8 4 로 삽입정렬 --> 3 4 7 8
            1기준 2갭인 1 2 6 5 로 삽입정렬 --> 1 2 5 6
            --->결과 : 3 1 4 2 5 7 6 8 -->아까 4 gap보다 정렬됨
            1-정렬 수행
            --->결과 : 1 2 3 4 5 6 7 8  (기존 처음의 상태보다는 삽입과 복사가 덜 일어난다)
       증분값을 서로 배수가 되지 않도록 만들어야 효율적으로 정렬가능
       시간복잡도 : O(n^1.25) 로 시간은 빠르지만 멀리 떨어진 요소를 교환하므로 안정적이지 않음.
    5) 퀵 정렬
    6) 병합 정렬
    7) 힙 정렬
    8) 도수 정렬